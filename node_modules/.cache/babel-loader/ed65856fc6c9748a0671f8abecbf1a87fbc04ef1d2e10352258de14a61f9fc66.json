{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chhaya Yadav\\\\calculator\\\\src\\\\PeterNumberCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeterNumberCalculator = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const calculateLastPeterNumber = () => {\n    const inputNumber = parseInt(input, 10);\n    if (!isNaN(inputNumber) && inputNumber >= 1 && inputNumber <= Math.pow(10, 18)) {\n      const resultNumber = findLastPeterNumber(inputNumber);\n      setResult(resultNumber.toString());\n    } else {\n      setResult('Invalid input. Please enter a number between 1 and 10^18.');\n    }\n  };\n  const findLastPeterNumber = inputNumber => {\n    const digits = Array.from(inputNumber.toString()).map(Number);\n    for (let i = digits.length - 1; i > 0; i--) {\n      if (digits[i] < digits[i - 1]) {\n        digits[i - 1] -= 1;\n        for (let j = i; j < digits.length; j++) {\n          digits[j] = 9;\n        }\n      }\n    }\n    return parseInt(digits.join(''), 10);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter a number between 1 and 10^18:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateLastPeterNumber,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PeterNumberCalculator, \"Rn2yf1jfSoSMg1/LTdctDCg0n5U=\");\n_c = PeterNumberCalculator;\nexport default PeterNumberCalculator;\nvar _c;\n$RefreshReg$(_c, \"PeterNumberCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PeterNumberCalculator","_s","input","setInput","result","setResult","calculateLastPeterNumber","inputNumber","parseInt","isNaN","Math","pow","resultNumber","findLastPeterNumber","toString","digits","Array","from","map","Number","i","length","j","join","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Chhaya Yadav/calculator/src/PeterNumberCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PeterNumberCalculator = () => {\r\n  const [input, setInput] = useState('');\r\n  const [result, setResult] = useState('');\r\n\r\n  const calculateLastPeterNumber = () => {\r\n    const inputNumber = parseInt(input, 10);\r\n\r\n    if (!isNaN(inputNumber) && inputNumber >= 1 && inputNumber <= Math.pow(10, 18)) {\r\n      const resultNumber = findLastPeterNumber(inputNumber);\r\n      setResult(resultNumber.toString());\r\n    } else {\r\n      setResult('Invalid input. Please enter a number between 1 and 10^18.');\r\n    }\r\n  };\r\n\r\n  const findLastPeterNumber = (inputNumber) => {\r\n    const digits = Array.from(inputNumber.toString()).map(Number);\r\n\r\n    for (let i = digits.length - 1; i > 0; i--) {\r\n      if (digits[i] < digits[i - 1]) {\r\n        digits[i - 1] -= 1;\r\n        for (let j = i; j < digits.length; j++) {\r\n          digits[j] = 9;\r\n        }\r\n      }\r\n    }\r\n\r\n    return parseInt(digits.join(''), 10);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Enter a number between 1 and 10^18:\r\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\r\n      </label>\r\n      <button onClick={calculateLastPeterNumber}>Calculate</button>\r\n      <div>\r\n        Result: {result}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeterNumberCalculator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMC,WAAW,GAAGC,QAAQ,CAACN,KAAK,EAAE,EAAE,CAAC;IAEvC,IAAI,CAACO,KAAK,CAACF,WAAW,CAAC,IAAIA,WAAW,IAAI,CAAC,IAAIA,WAAW,IAAIG,IAAI,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;MAC9E,MAAMC,YAAY,GAAGC,mBAAmB,CAACN,WAAW,CAAC;MACrDF,SAAS,CAACO,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACLT,SAAS,CAAC,2DAA2D,CAAC;IACxE;EACF,CAAC;EAED,MAAMQ,mBAAmB,GAAIN,WAAW,IAAK;IAC3C,MAAMQ,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACV,WAAW,CAACO,QAAQ,CAAC,CAAC,CAAC,CAACI,GAAG,CAACC,MAAM,CAAC;IAE7D,KAAK,IAAIC,CAAC,GAAGL,MAAM,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1C,IAAIL,MAAM,CAACK,CAAC,CAAC,GAAGL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,EAAE;QAC7BL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAClB,KAAK,IAAIE,CAAC,GAAGF,CAAC,EAAEE,CAAC,GAAGP,MAAM,CAACM,MAAM,EAAEC,CAAC,EAAE,EAAE;UACtCP,MAAM,CAACO,CAAC,CAAC,GAAG,CAAC;QACf;MACF;IACF;IAEA,OAAOd,QAAQ,CAACO,MAAM,CAACQ,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACtC,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,GAAO,qCAEL,eAAAzB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,KAAK,EAAExB,KAAM;QAACyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACRlC,OAAA;MAAQmC,OAAO,EAAE5B,wBAAyB;MAAAkB,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DlC,OAAA;MAAAyB,QAAA,GAAK,UACK,EAACpB,MAAM;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1CID,qBAAqB;AAAAmC,EAAA,GAArBnC,qBAAqB;AA4C3B,eAAeA,qBAAqB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}